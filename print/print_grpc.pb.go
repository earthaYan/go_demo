// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.1
// source: print.proto

package print

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PrintClient is the client API for Print service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PrintClient interface {
	PrintHello(ctx context.Context, in *PrintRequest, opts ...grpc.CallOption) (*PrintResponse, error)
}

type printClient struct {
	cc grpc.ClientConnInterface
}

func NewPrintClient(cc grpc.ClientConnInterface) PrintClient {
	return &printClient{cc}
}

func (c *printClient) PrintHello(ctx context.Context, in *PrintRequest, opts ...grpc.CallOption) (*PrintResponse, error) {
	out := new(PrintResponse)
	err := c.cc.Invoke(ctx, "/Print/PrintHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PrintServer is the server API for Print service.
// All implementations must embed UnimplementedPrintServer
// for forward compatibility
type PrintServer interface {
	PrintHello(context.Context, *PrintRequest) (*PrintResponse, error)
	mustEmbedUnimplementedPrintServer()
}

// UnimplementedPrintServer must be embedded to have forward compatible implementations.
type UnimplementedPrintServer struct {
}

func (UnimplementedPrintServer) PrintHello(context.Context, *PrintRequest) (*PrintResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PrintHello not implemented")
}
func (UnimplementedPrintServer) mustEmbedUnimplementedPrintServer() {}

// UnsafePrintServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PrintServer will
// result in compilation errors.
type UnsafePrintServer interface {
	mustEmbedUnimplementedPrintServer()
}

func RegisterPrintServer(s grpc.ServiceRegistrar, srv PrintServer) {
	s.RegisterService(&Print_ServiceDesc, srv)
}

func _Print_PrintHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrintRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrintServer).PrintHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Print/PrintHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrintServer).PrintHello(ctx, req.(*PrintRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Print_ServiceDesc is the grpc.ServiceDesc for Print service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Print_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "Print",
	HandlerType: (*PrintServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PrintHello",
			Handler:    _Print_PrintHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "print.proto",
}
